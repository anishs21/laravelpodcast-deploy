name: Laravel CI/CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  laravel-tests:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: laravel
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h 127.0.0.1"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 7.4
          extensions: mbstring, pdo, pdo_mysql

      - name: Prepare Laravel
        run: |
          cp .env.example .env
          sed -i 's/DB_HOST=.*/DB_HOST=127.0.0.1/' .env
          sed -i 's/DB_PORT=.*/DB_PORT=3306/' .env
          sed -i 's/DB_DATABASE=.*/DB_DATABASE=laravel/' .env
          sed -i 's/DB_USERNAME=.*/DB_USERNAME=root/' .env
          sed -i 's/DB_PASSWORD=.*/DB_PASSWORD=root/' .env
          composer install --no-interaction --prefer-dist
          php artisan key:generate
          php artisan config:clear

      - name: Wait for MySQL
        run: |
          sudo apt-get install -y netcat
          for i in {1..30}; do
            nc -z 127.0.0.1 3306 && echo "MySQL is up!" && break
            echo "Waiting for MySQL ($i)..."
            sleep 2
          done

      - name: Run migrations
        run: php artisan migrate --force

      - name: Run tests
        run: php artisan test

  deploy:
    needs: laravel-tests
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Deploy to EC2 via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_IP }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}  # Ensure you also added EC2_KEY (private SSH key)
          script: |
            cd /var/www/laravelpodcast-app
            git pull origin main
            composer install --no-interaction --prefer-dist
            php artisan migrate --force
            php artisan config:cache
            php artisan route:cache
            php artisan view:cache
